// Code generated by MockGen. DO NOT EDIT.
// Source: gocoin.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	mautrix "maunium.net/go/mautrix"
	id "maunium.net/go/mautrix/id"
)

// MockMautrixClient is a mock of MautrixClient interface.
type MockMautrixClient struct {
	ctrl     *gomock.Controller
	recorder *MockMautrixClientMockRecorder
}

// MockMautrixClientMockRecorder is the mock recorder for MockMautrixClient.
type MockMautrixClientMockRecorder struct {
	mock *MockMautrixClient
}

// NewMockMautrixClient creates a new mock instance.
func NewMockMautrixClient(ctrl *gomock.Controller) *MockMautrixClient {
	mock := &MockMautrixClient{ctrl: ctrl}
	mock.recorder = &MockMautrixClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMautrixClient) EXPECT() *MockMautrixClientMockRecorder {
	return m.recorder
}

// SendText mocks base method.
func (m *MockMautrixClient) SendText(arg0 id.RoomID, arg1 string) (*mautrix.RespSendEvent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendText", arg0, arg1)
	ret0, _ := ret[0].(*mautrix.RespSendEvent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendText indicates an expected call of SendText.
func (mr *MockMautrixClientMockRecorder) SendText(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendText", reflect.TypeOf((*MockMautrixClient)(nil).SendText), arg0, arg1)
}
